#Credits to
  #UV n Team
  #i steal some of sounddrill31 code
  #AntoninoScordino
#work by xc112lg / xc112@xda
 
  
name: Selfhosted Crave Rom Builder Stable

on:
  #push:
   # branches:
    #  - main 
  workflow_dispatch:
    
    inputs:
      BASE_PROJECT:
        description: 'Choose a base project:'
        required: true
        default: 'CipherOS-'
        type: choice
        options:
          - 'ArrowOS13-'
          - 'DerpFest15-'
          - 'LineageOS20-'
          - 'LineageOS21-'
          - 'CipherOS-'
          - 'RisingOS-'
          - 'AlphaDroid-'
          - 'LineageOS22-'

      BUILD_DIFFERENT_ROM:
        description: "Command to initialize a different 'repo' project: repo init -u https://github.com/crdroidandroid/android.git -b 14.0 --git-lfs"
        required: false
      REMOVALS:
        description: "Folders to be removed before syncing: no need to delete folder prebuilts):"
        required: false
      LOCAL_MANIFEST:
        description: "Personal local manifest [repository or raw]:"
        required: true
        default: 'https://github.com/winbo-yml-exe/local_manifests'
      LOCAL_MANIFEST_BRANCH:
        description: "Personal local manifest's branch:"
        required: false
        default: 'main'
      PRODUCT_NAME:
        description: "Product to build:"
        required: false
        default: "cipher_gale-ap1a"
      BUILD_TYPE:
        description: 'Type of build:'
        required: false
        default: '-userdebug'
        type: choice
        options: 
        - '-eng'
        - '-userdebug'
        - '-user' 
      BUILD_COMMAND:
        description: 'Command to be used for compiling:'
        required: false
        default: 'brunch gale'
      EXTRA_COMMAND :
        description: "EXTRA_COMMAND:if you need to delete or clone after reposync: rf device/lge/msm8996-common;git clone https://github.com/xc112lg/android_device_lge_msm8996-common -b evo4 device/lge/msm8996-common"
        required: false
        default: ''
      CLEAN_BUILD:
        description: 'Build with a clean workspace? Selecting Yes here will reset the data to its default state removing any of your work, Ask in discord if you dont understand this option, If i see builders spamming yes on this option i will cancel their build'
        required: true
        default: 'no'
        type: choice
        options: 
        - 'yes'
        - 'no'
          
jobs:
  run-devspace-and-tmux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git clean -fdX


      - name: Set up Environment
        run: |
          BASE_PROJECT_NAME="${{ inputs.BASE_PROJECT }}"
          case $BASE_PROJECT_NAME in
            'ArrowOS13-') BASE_PROJECT_VALUE='repo init -u https://github.com/ArrowOS/android_manifest.git -b arrow-13.1 --depth=1' ;;
            'DerpFest15-') BASE_PROJECT_VALUE='repo init -u https://github.com/DerpFest-AOSP/manifest.git -b 15 --depth=1' ;;
            'LineageOS20-') BASE_PROJECT_VALUE='repo init -u https://github.com/accupara/los20.git -b lineage-20.0 --git-lfs --depth=1' ;;
            'LineageOS21-') BASE_PROJECT_VALUE='repo init -u https://github.com/LineageOS/android.git -b lineage-21.0 --git-lfs --depth=1' ;;
            'CipherOS-') BASE_PROJECT_VALUE='repo init -u https://github.com/CipherOS/android_manifest.git -b fourteen --git-lfs --depth=1' ;;
            'RisingOS-') BASE_PROJECT_VALUE='repo init -u https://github.com/RisingTechOSS/android -b fifteen --git-lfs --depth=1' ;;
            'AlphaDroid-') BASE_PROJECT_VALUE='repo init -u https://github.com/AlphaDroid-Project/manifest.git -b alpha-14 --git-lfs --depth=1' ;;
            'LineageOS22-') BASE_PROJECT_VALUE='repo init -u https://github.com/LineageOS/android.git -b lineage-22.0 --git-lfs --depth=1' ;;
            *) BASE_PROJECT_VALUE='default-command' ;;  # Provide a default command for unknown options
          esac
          echo "BASE_PROJECT_NAME=$BASE_PROJECT_NAME" >> $GITHUB_ENV
          echo "BASE_PROJECT_VALUE=$BASE_PROJECT_VALUE" >> $GITHUB_ENV
          REPO_NAME=$(basename "${GITHUB_REPOSITORY}")
          echo "Repository Name: $REPO_NAME"

        

      - name: Edit run.sh
        run: |

          if [ "${{ inputs.CLEAN_BUILD }}" == "yes" ]; then
            export CLEAN_FLAG="--clean"
          else
            export CLEAN_FLAG=""
          fi

          if [ -n "${{ inputs.BUILD_DIFFERENT_ROM }}" ]; then
            export deleteprep="prebuilts/clang/host/linux-x86 prebuilts/rust"
          else
            export deleteprep=""
          fi

           
          echo "#!/bin/bash" > run.sh
          echo 'export GH_TOKEN=$(cat gh_token.txt)' >> run.sh
          echo '#gh auth login --with-token $GH_TOKEN' >> run.sh
          echo "cd /crave-devspaces" >> run.sh
          echo "mkdir -p ${{ inputs.BASE_PROJECT }}" >> run.sh
          echo "rm -rf crave_rom_builder" >> run.sh
          echo 'git clone https://$GH_TOKEN@github.com/${{ github.repository }}.git' >> run.sh
          echo "cp -f crave_rom_builder/run1.sh run1.sh" >> run.sh
          echo "chmod +x run1.sh" >> run.sh
          echo "cp -f crave_rom_builder/craverun.sh ${{ inputs.BASE_PROJECT }}" >> run.sh
          echo "./run1.sh" >> run.sh
          echo 'echo "$(pwd)" > bp.txt'
          echo 'export GH_TOKEN=$(cat gh_token.txt)' >> run1.sh
          echo '#gh auth login --with-token $GH_TOKEN' >> run1.sh
          echo "cd ${{ inputs.BASE_PROJECT }}" > run1.sh
          echo "${BASE_PROJECT_VALUE}" >> run1.sh
          echo "chmod +x craverun.sh" >> run1.sh
          echo ". craverun.sh" >> run1.sh
          echo "#!/bin/bash" > craverun.sh
          echo "rm -rf crave_rom_builder" >> craverun.sh
          echo 'git clone https://$GH_TOKEN@github.com/${{ github.repository }}.git' >> craverun.sh
          echo  "cp -f crave_rom_builder/pull.sh pull.sh">> craverun.sh
          echo  "chmod +x pull.sh">> craverun.sh
          echo "crave run --no-patch $CLEAN_FLAG -- \"          #Â© crave.io Inc. 2017-2024" >> craverun.sh
          echo "              #Thanks to UV n Team">> craverun.sh
          echo "        #no dual account just to build faster">> craverun.sh
          echo "              #respect the rule">> craverun.sh
          echo "${{ inputs.BUILD_DIFFERENT_ROM }}">> craverun.sh
          echo "rm -rf .repo/local_manifests ${{ inputs.REMOVALS }}">> craverun.sh
          echo "git clone ${{ inputs.LOCAL_MANIFEST}} -b ${{ inputs.LOCAL_MANIFEST_BRANCH }} .repo/local_manifests">> craverun.sh
          echo  '/opt/crave/resync.sh'>> craverun.sh
          echo "${{ inputs.EXTRA_COMMAND }} ">> craverun.sh
          echo "source build/envsetup.sh">> craverun.sh
          echo "lunch ${{ inputs.PRODUCT_NAME }}${{ inputs.BUILD_TYPE }}">> craverun.sh
          echo "m installclean">> craverun.sh
          echo "${{ inputs.BUILD_COMMAND }}">> craverun.sh
          echo '"'>> craverun.sh
          echo  ". pull.sh">> craverun.sh

      

      - name: Check for changes
        id: check_changes
        run: |
          changes=$(git diff --name-only)
          if [ -z "$changes" ]; then
            echo "CHANGES=false" >> $GITHUB_ENV
          else
            echo "CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Commit changes
        if: env.CHANGES == 'true'
        run: |
          git add .
          git commit -m "Update run.sh with commands"
          git status

      - name: Push changes
        if: env.CHANGES == 'true'
        run: |
          git push https://github.com/${{ github.repository }}.git HEAD:main
        env:
          GH_TOKEN: ${{ secrets.PAT }}      

      - name: Set File URL
        id: set_url
        run: echo "::set-output name=url::${{ secrets.GH_TOKEN }}@raw.githubusercontent.com/${{ github.repository }}/main/run.sh"

      - name: Download and Run get_crave.sh
        run: |
          curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash -s --
          echo '${{ secrets.CONF }}' > crave.conf



          
      - name: Run Crave
        run: |
          echo ${{ inputs.BASE_PROJECT }}
          echo ${{ github.workflow }}
          REPO_NAME=$(basename "${GITHUB_REPOSITORY}")
          echo "Repository Name: $REPO_NAME"
          #  Run your commands and continue even if there is an error
          ./crave -c ./crave.conf devspace || true


          ./crave devspace -- "tmux new-session -d -s ghaction; 
                               tmux send-keys -t ghaction 'C-a' 'C-k' './actions-runner/run.sh ' Enter
                               echo "Runner Started""
  test:
    timeout-minutes: 720      
    name: Build using foss.crave.io
    needs: run-devspace-and-tmux    
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:



      # Check-out in order to access the repository's files.
    - name: Check-out to repository
      uses: actions/checkout@v4
    - name: Run Crave
      run: |
        echo "${{ secrets.GH_TOKEN }}" > gh_token.txt;export GH_TOKEN=$(cat gh_token.txt);rm -rf crave_rom_builder;git clone https://$GH_TOKEN@github.com/${{ github.repository }}.git;rm run.sh;cp -f crave_rom_builder/run.sh run.sh;chmod +x run.sh;. run.sh
      continue-on-error: true
    - name: Stop Crave on Workflow Cancellation
      if: cancelled()  
      run: cd /crave-devspaces && cd ${{ inputs.BASE_PROJECT }}&&crave stop --all


